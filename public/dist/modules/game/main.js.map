{
  "version": 3,
  "sources": ["../../src/frontend/modules/api/game.ts", "../../src/frontend/modules/game/field.ts", "../../src/frontend/modules/game/initialize-board.ts", "../../src/frontend/modules/game/board.ts", "../../src/frontend/modules/game/render-game.ts", "../../src/frontend/modules/game/search.ts", "../../src/frontend/modules/game/main.ts"],
  "sourcesContent": [
    "export async function searchGames() {\n    const response = await fetch(\"/api/v1/games\")\n    return await response.json()\n}\n\nexport async function getGame(id: string) {\n    const response = await fetch(`/api/v1/games/${id}`)\n    return await response.json()\n}",
    "import type { Board, Field, FieldKey } from \"./types\";\n\nexport function onFieldClick(board:Board, fieldKey:FieldKey) {\n    const field = board.map.get(fieldKey)\n\n    if (!field) {\n        return\n    }\n\n    if (field.color) {\n        return\n    }\n\n    field.color = board.turn\n\n    board.turn = board.turn === \"x\" ? \"o\" : \"x\"\n\n    board.map.set(fieldKey, field)\n    renderField(field)\n}\n\n\nexport function renderField(field: Field) {\n    if(field.element) {\n        if(field.color) {\n            field.element.dataset.color = field.color\n            // field.element.innerHTML = `<div class=\"icon-${field.color === \"x\" ? \"x\" : \"circle\"}\"></div>` \n            field.element.innerHTML = `<img src=\"/icon/${field.color === \"x\" ? \"x\" : \"circle\"}.svg\" />`\n        } else {\n            delete field.element.dataset.color\n            field.element.innerHTML = \"\"\n        }\n    }\n}",
    "import { onFieldClick } from \"./field\";\nimport type { Board } from \"./types\";\n\nexport function initializeBoard(board: Board) {\n\n    console.log(board.element.children)\n\n    for (let i = 0; i < 15**2; i++) {\n        const el = document.createElement(\"div\")\n        const row = Math.floor(i / 15)\n        const col = i % 15\n\n        el.addEventListener(\"click\", () => onFieldClick(board, `${row}:${col}`))\n\n        board.map.set(`${row}:${col}`, {\n            element: el,\n            row,\n            col,\n            color: null\n        })\n\n        board.element.appendChild(el)\n    }\n\n}",
    "import type { Game } from \"./types\";\n\nexport function boardIterator(board: Game[\"board\"]) {\n    return {\n        [Symbol.iterator]: function* () {\n            for (const [rowIndex, row] of board.entries()) {\n                for (const [colIndex, field] of row.entries()) {\n                    yield { row: rowIndex, col: colIndex, field };\n                }\n            }\n        }\n    };\n}",
    "import { boardIterator } from \"./board\";\nimport { renderField } from \"./field\";\nimport type { Board, Game } from \"./types\";\n\nexport function renderGame(board: Board, game: Game) {\n    let i = 0\n    for (const { field } of boardIterator(game.board)) {\n        if (field.toLocaleLowerCase() === \"x\") {\n            i++\n        } else if (field.toLocaleLowerCase() === \"o\") {\n            i--\n        }\n    }\n\n    if (i < 0) {\n        // x turn\n        board.turn = \"x\"\n    } else {\n        // o turn\n        board.turn = \"o\"\n    }\n\n    for (const [key, field] of board.map.entries()) {\n        const [row, col] = key.split(\":\").map(Number)\n        const boardField = game.board[row]?.[col]\n\n        const newField = {\n            ...field,\n            color: boardField.toLowerCase() as \"x\" | \"o\" || null\n        }\n\n        board.map.set(key, newField)\n        renderField(newField)\n    }\n}\n",
    "const el: {\n  query: HTMLInputElement | null,\n  results: HTMLDivElement | null,\n  difficulty: HTMLSelectElement | null,\n  date: HTMLInputElement | null\n} = {\n  query: null,\n  difficulty: null,\n  date: null,\n  results: null\n}\n\nfunction init() {\n  if (el.query === null) {\n    el.query = document.getElementById(\"game-search-input\") as HTMLInputElement\n  }\n\n  if (el.results === null) {\n    el.results = document.getElementById(\"game-search-results\") as HTMLDivElement\n  }\n\n  if (el.difficulty === null) {\n    el.difficulty = document.getElementById(\"game-search-difficulty\") as HTMLSelectElement\n  }\n\n  if (el.date === null) {\n    el.date = document.getElementById(\"game-search-date\") as HTMLInputElement\n  }\n\n}\n\n/**\n * gets invoked from many places, whenever the search inputs change\n * native: onKeyDown, onChange etc.\n */\nexport function onGameSearchFormChange() {\n  init()\n\n  const request = {\n    name: el.query?.value ? el.query?.value : undefined,\n    difficulty: el.difficulty?.value !== \"none\" ? el.difficulty?.value : undefined,\n    date: el.date?.value ? new Date(el.date?.value).toISOString() : undefined\n  }\n\n  console.log(request);\n\n\n  const res = fetch(\"/game/search\", {\n    method: \"POST\",\n    body: JSON.stringify(request),\n  })\n\n  res.then((res) => {\n    return res.text()\n  }).then((data) => {\n    console.log(data);\n    \n    el.results?.innerHTML && (el.results.innerHTML = data)\n  })\n}",
    "import { getGame, searchGames } from \"../api/game\";\nimport { boardIterator } from \"./board\";\nimport { initializeBoard } from \"./initialize-board\";\nimport { renderGame } from \"./render-game\";\nimport type { Board, Game } from \"./types\";\n\nimport {onGameSearchFormChange as onGameSearchFormChange_} from\"./search\"\nvar onGameSearchFormChange = onGameSearchFormChange_;\n\nconsole.log(onGameSearchFormChange);\n\n\nconst board = new Proxy({\n  map: new Map(),\n  element: document.getElementById(\"board\") as HTMLElement,\n  turn: \"x\"\n} as Board, {})\n\ninitializeBoard(board)\n\n// searchGames().then((games) => {\n//   const game = games[0] as Game\n\n//   renderGame(board, game)\n// })\n\n\n\n\nconst searchResultsEl = document.getElementById(\"game-search-results\") as HTMLElement\n\n// id, game\nconst gameCache = new Map<string, (Game & { loading: false }) | { loading: Promise<false> }>()\n\nfunction findCard(el: HTMLElement): HTMLElement | null {\n  if (el.dataset.searchId !== undefined) {\n    return el\n  }\n\n  if (el.parentElement === null) {\n    return null\n  }\n\n  return findCard(el.parentElement)\n}\n\nsearchResultsEl.addEventListener(\"mousedown\", async (e) => {\n  const el = e.target as HTMLElement\n\n  const cardEl = findCard(el)\n\n  if (!cardEl) {\n    return\n  }\n\n  const gameId = cardEl.dataset.searchId\n\n  if (!gameId) {\n    return\n  }\n\n  let game = gameCache.get(gameId)\n\n  if (!game) {\n    game = await getGame(gameId)\n  }\n\n  if (game?.loading instanceof Promise) {\n    await game.loading\n    game = gameCache.get(gameId)\n  }\n\n\n  if (game?.loading === false) {\n    renderGame(board, game)\n  }\n\n\n})\n\n\nsearchResultsEl.addEventListener(\"mouseover\", (e) => {\n  const cardEl = findCard(e.target as HTMLElement)\n\n  // prefetch\n\n  if (!cardEl) {\n    return\n  }\n\n  const gameId = cardEl.dataset.searchId\n\n  if (!gameId) {\n    return\n  }\n\n  const game = gameCache.get(gameId)\n\n  if (game) {\n    return\n  }\n\n  const res = getGame(gameId)\n\n  gameCache.set(gameId, { loading: res.then(() => (false)) })\n\n  res.then((game) => {\n    gameCache.set(gameId, { ...game, loading: false })\n  })\n})\n\nconst filtersEl = document.getElementById(\"game-search-filters\") as HTMLElement;\nconst filtersTriggerEl = document.getElementById(\"game-search-trigger\") as HTMLElement;\n\nfiltersTriggerEl.addEventListener(\"click\", () => {\n  filtersEl.dataset.state = filtersEl.dataset.state === \"closed\" ? \"open\" : \"closed\";\n  filtersTriggerEl.dataset.state = filtersEl.dataset.state;\n})\n\n\nconst searchMenuTrigger = document.getElementById(\"game-search-menu-trigger\") as HTMLElement;\nconst searchMenu = document.getElementById(\"game-search-menu-modal\") as HTMLElement;\n\nsearchMenuTrigger.addEventListener(\"click\", () => {\n  searchMenu.dataset.state = searchMenu.dataset.state === \"closed\" ? \"open\" : \"closed\";\n  searchMenuTrigger.dataset.state = searchMenu.dataset.state;\n})\n\n"
  ],
  "mappings": "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",
  "debugId": "6A59F9CA9BB6C48564756E2164756E21",
  "names": []
}